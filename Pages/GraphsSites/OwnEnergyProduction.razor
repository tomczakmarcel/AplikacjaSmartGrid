@page "/ownenergyproduction"
@using ChartJs.Blazor.LineChart
@using ChartJs.Blazor.BarChart
@using System.Drawing
@inject AppState AppState

<PageTitle>Zaaktualizuj produkcje energii</PageTitle>
<div class="d-flex justify-content-center"><h1>Szczegółowe informacje dotyczące produkcji energii przez panele fotowoltaiczne</h1></div>
    <div class="col-sm">
     <label for="applyCalendarStart">Wybierz dzień który chcesz zobaczyć na wykresie</label>
    <input @bind-value=NewValueStart type="date" class="form-control" id="applyCalendarStart" aria-describedby="applyCalendarStart" placeholder="">
    </div>
        <button @onclick=GetValuet>Aktualizuj wykres</button>         <button @onclick=DeleteValuet>Wyczyść wykres</button>
    <div class="col-sm justify-content-center">
    <Chart Config="_config" @ref="_chart"></Chart>
    </div>

@code {
    private LineConfig _config;
    private Chart _chart;

    private DateTime CurrentValueStart { get; set; }
    private DateTime CurrentValueEnd { get; set; }

    ImportCSVService importCSVService = new ImportCSVService();

    private DateTime NewValueStart { get; set; }
    private DateTime NewValueEnd { get; set; }

    private void GetValuet()
    {
        CurrentValueStart = NewValueStart;
        CurrentValueEnd =  NewValueStart.AddDays(1);

        GetDatasetService getDatasetService = new GetDatasetService();
        List<SolarProductionDataModel> solarProductionModel = importCSVService.ReturnListSolar(false, true, AppState.ProductionOfSolarEnergy);

        var solarProduction = getDatasetService.GetOnlySolarProductionDayDataset(solarProductionModel, CurrentValueStart, CurrentValueEnd);   
        var time = getDatasetService.GetAxisXForSolarHourly(solarProductionModel, CurrentValueStart, CurrentValueEnd);

        solarProduction.Label = CurrentValueStart.Date.ToString() + " do " + CurrentValueEnd.Date.ToString();

        if (_config.Data.Labels.Count == 0)
            _config.Data.Labels.AddRange(time);
        _config.Data.Datasets.Add(solarProduction);
    }

    private void DeleteValuet()
    {
        _config.Data.Datasets.Clear();
        _config.Data.Labels.Clear();
    }  


    protected override void OnInitialized()
    {
                GetDatasetService getDatasetService = new GetDatasetService();
        List<SolarProductionDataModel> solarProductionModel = importCSVService.ReturnListSolar(false, true, AppState.ProductionOfSolarEnergy);

   _config = new LineConfig
                    {
                        Options = new LineOptions
                        {
                            Responsive = true,
                            Title = new OptionsTitle
                            {
                                Display = true,
                                Text = "Produkcja energii elektrycznej z paneli fotowoltaicznych"
                            },
                            Tooltips = new Tooltips
                            {
                                Mode = InteractionMode.Nearest,
                                Intersect = true
                            },
                            Hover = new Hover
                            {
                                Mode = InteractionMode.Nearest,
                                Intersect = true
                            },
                            Scales = new Scales
                            {
                                XAxes = new List<CartesianAxis>
                                {
                                    new CategoryAxis
                                    {
                                        ScaleLabel = new ScaleLabel
                                        {
                                            Display = true,
                                            LabelString = "Godziny"
                                        }
                                    }
                                },
                                YAxes = new List<CartesianAxis>
                                {
                                    new LinearCartesianAxis
                                    {
                                        ScaleLabel = new ScaleLabel
                                        {
                                            Display = true,
                                            LabelString = "kWh"
                                        }
                                    }
                                }
                            }
                        }
                    };
    }
}
